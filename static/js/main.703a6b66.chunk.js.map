{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","Component","EventList","events","this","props","className","map","event","id","CitySearch","state","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","location","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","onClick","NumberOfEvents","htmlFor","eventCounter","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","window","href","startsWith","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","JSON","stringify","NProgress","done","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","history","pushState","pathname","newurl","protocol","host","App","locationEvents","numberOfEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.703a6b66.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\nexport default Event;\r\n","// src/EventList.js\r\n\r\nimport React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;\r\n","// src/CitySearch.js\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n  state = {\r\n   query: '',\r\n   suggestions: [],\r\n   showSuggestions: undefined\r\n   }\r\n   handleInputChanged = (event) => {\r\n  const value = event.target.value;\r\n  const suggestions = this.props.locations.filter((location) => {\r\n    return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n  });\r\n\r\n  this.setState({\r\n    query: value,\r\n    suggestions,\r\n  });\r\n};\r\nhandleItemClicked = (suggestion) => {\r\n  this.setState({\r\n    query: suggestion,\r\n    showSuggestions: false\r\n  });\r\n\r\n  this.props.updateEvents(suggestion);\r\n}\r\n\r\n\r\n  render() {\r\n  return (\r\n    <div className=\"CitySearch\">\r\n    <input\r\n    type=\"text\"\r\n    className=\"city\"\r\n    value={this.state.query}\r\n    onChange={this.handleInputChanged}\r\n    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n    />\r\n      <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\r\n    {this.state.suggestions.map((suggestion) => (\r\n      <li\r\n        key={suggestion}\r\n        onClick={() => this.handleItemClicked(suggestion)}\r\n      >{suggestion}</li>\r\n    ))}\r\n    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n      <b>See all cities</b>\r\n    </li>\r\n  </ul>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default CitySearch;\r\n","import React, { Component } from 'react';\r\n\r\nclass NumberOfEvents extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"EventNumberComponent\">\r\n\r\n      <label htmlFor=\"numberOfEventsInput\"> Number of Events on Page:\r\n\r\n\r\n      <input\r\n        id=\"numberOfEventsInput\"\r\n        type=\"number\"\r\n        className=\"numberInput\"\r\n        value={this.props.eventCounter}\r\n       />\r\n      </label>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;\r\n","// src/mock-data.js\r\n\r\nconst mockData = [\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181159875584000\\\"\",\r\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200522T120000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjJUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:14:30.000Z\",\r\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n   \"summary\": \"React is Fun\",\r\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n   \"location\": \"Berlin, Germany\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-22T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-22T15:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-22T14:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n  {\r\n   \"kind\": \"calendar#event\",\r\n   \"etag\": \"\\\"3181161784712000\\\"\",\r\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200523T140000Z\",\r\n   \"status\": \"confirmed\",\r\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjNUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n   \"created\": \"2020-05-19T19:17:46.000Z\",\r\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n   \"summary\": \"Learn JavaScript\",\r\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n   \"location\": \"London, UK\",\r\n   \"creator\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"organizer\": {\r\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n    \"self\": true\r\n   },\r\n   \"start\": {\r\n    \"dateTime\": \"2020-05-23T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"end\": {\r\n    \"dateTime\": \"2020-05-23T17:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n   \"originalStartTime\": {\r\n    \"dateTime\": \"2020-05-23T16:00:00+02:00\",\r\n    \"timeZone\": \"Europe/Berlin\"\r\n   },\r\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n   \"sequence\": 0,\r\n   \"reminders\": {\r\n    \"useDefault\": true\r\n   },\r\n   \"eventType\": \"default\"\r\n  },\r\n\r\n];\r\n\r\nexport { mockData };\r\n","/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n import { mockData } from './mock-data';\r\n import axios from 'axios';\r\n import NProgress from 'nprogress';\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  if (window.location.href.startsWith('http://localhost')) {\r\n     return mockData;\r\n    }\r\n    const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://87eejclrb4.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\nconst accessToken = localStorage.getItem('access_token');\r\nconst tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://87eejclrb4.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://87eejclrb4.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport {extractLocations, getEvents  } from './api';\n\nclass App extends Component {\n  constructor(props) {\n  super(props)\n\n  this.state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n  }\n}\nupdateEvents = (location) => {\n  getEvents().then((events) => {\n    const locationEvents = (location === 'all') ?\n      events :\n      events.filter((event) => event.location === location);\n    this.setState({\n      events: locationEvents\n    });\n  });\n}\ncomponentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n      <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}